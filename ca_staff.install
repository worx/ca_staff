<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ca_staff_install() {  
  // Update the imce roles profiles to set the Admin and writer role.
  $imce_roles_profiles = variable_get('imce_roles_profiles');

  $imce_roles_profiles_vaule = array (
    'weight' => '-9',
    'public_pid' => 2,
    'private_pid' => 2,
  );

  $imce_roles_profiles[191817721] = $imce_roles_profiles_vaule;

  variable_set('imce_roles_profiles', $imce_roles_profiles);

  // Set the Pathauto for the node.
  variable_set('pathauto_node_ca_staff_pattern', 'staff/[node:title]');

  variable_get('ca_staff_list_template', 'ca_staff_list_template_one');

  variable_get('ca_staff_display', 'ca_staff_display_square');

  // Get the worx_aurora_base_enable variable to default set if not already set.
  variable_get('worx_aurora_base_enable', 'worx_aurora_base_disabled');

  // ASet the permissions for Staff Admin.
  user_role_change_permissions(191817721, 
    array(
      'assign node weight' => TRUE,
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );

  // Set the permissions for Administrator
  user_role_change_permissions(3, 
    array(
      'assign node weight' => TRUE,
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );

  // Set the permissions for Webmaster
  user_role_change_permissions(4, 
    array(
      'assign node weight' => TRUE,
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );
}

/**
 * Setting worx_aurora_base_enable default so that panels can work corretly when aura base feature is not enabled.
 * Added the permission assign node weights for Staff Admin.
 */
function ca_staff_update_7000() {
  // Get the worx_aurora_base_enable variable to default set if not already set.
  variable_get('worx_aurora_base_enable', 'worx_aurora_base_disabled');

  // Added the permission assign node weights for Staff Admin.
  user_role_change_permissions(191817721, 
    array(
      'assign node weight' => TRUE,
    )
  );
}

/**
 * Updated to ensure the ca_staff_display variable gets set.
 */
function ca_staff_update_7001() {
  variable_get('ca_staff_display', 'ca_staff_display_square'); 

  // Get the worx_aurora_base_enable variable to default set if not already set.
  variable_get('worx_aurora_base_enable', 'worx_aurora_base_disabled');
}

/**
 * Set the permissions for Staff Admin, Webmaster and Administrator as a one time event rather than handled with features to allow additonal roles to be 
 * given these permissions without overridding the feature.
 */
 function ca_staff_update_7002() {
 // ASet the permissions for Staff Admin.
  user_role_change_permissions(191817721, 
    array(
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );

  // Set the permissions for Administrator
  user_role_change_permissions(3, 
    array(
      'assign node weight' => TRUE,
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );

  // Set the permissions for Webmaster
  user_role_change_permissions(4, 
    array(
      'assign node weight' => TRUE,
      'create ca_staff content' => TRUE,
      'delete any ca_staff content' => TRUE,
      'delete own ca_staff content' => TRUE,
      'edit any ca_staff content' => TRUE,
      'edit own ca_staff content' => TRUE,
    )
  );
}